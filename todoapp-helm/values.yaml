# Default values for todoapp-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

images:
  frontend:
    repository: kubernetesdemo/to-do-app-frontend
    tag: latest
    command: java -Dspring.profiles.active=dev2 -Dspring.data.mongodb.uri='mongodb://svc-dev-m2da-app:ycDo8velsGHLp*f@ls-service-mongodb.marsh-location-services-test.svc.cluster.local:27017/db' -jar  /var/app.ja
r
    pullPolicy: Always
  backend:
    repository: kubernetesdemo/to-do-app-backend
    tag: latest
    command: java -Dspring.profiles.active=dev2 -Dspring.data.mongodb.uri='mongodb://svc-dev-m2da-app:ycDo8velsGHLp*f@ls-service-mongodb.marsh-location-services-test.svc.cluster.local:27017/db' -jar  /var/app.ja
r
    pullPolicy: Always
  database:
    command: mysql
    repository: migs/mysql-5.7
    tag: 5.7
    pullPolicy: Always


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  name: mysql-pv-claim
  persistentVolumeClaimLabel: to-do-app
  storageClass: to-do-app
  capacity: 5Gi
  accessMode: "ReadWriteOnce"
  volumeMounts:
     mountPath: /var/lib/mysql

